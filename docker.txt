1. Download docker desktop and then install.
2. Open cmd and pull docker images using below mentioned commands -
docker pull selenium/hub
docker pull selenium/node-chrome
docker pull selenium/node-firefox

3. Create docker compose file and place it in project location.
4. Open cmd inside the project and run docker compose -
docker-compose up

5. Open http://localhost:4444 for checking selenium grid containers.
6. Scale the chrome containers to large number using below mentioned command -
docker-compose up -d --scale chrome=10
7. GET container ID's using "docker ps" command
8. In project set selenium grid url - http://127.0.0.1:4444 for chromeDriver
9. Create jar file for automation project and copy all the project dependencies in target folder.
10. For creating jar all below mentioned plugins in pom.xml.
<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
            <configuration>
            <compilerVersion>1.8</compilerVersion>
            <source>1.8</source>
            <target>1.8</target>
            <testSource>1.8</testSource>
            <testTarget>1.8</testTarget>
            </configuration>
      	</plugin>
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>/target/libs</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      	</plugin>
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
11. Execute below mentioned commands for copying the dependencies and generating the war
 - mvn clean package -DskipTests
 - mvn dependency:copy-dependencies
 
12. Rename created jars with name "selenium-docker" and "selenium-docker-tests.jar".
13. For executing selenium testcases using created jar, run these commands -
 -> cd target
 -> java -cp selenium-docker.jar;selenium-docker-tests.jar;dependency/* -DBROWSER=chrome org.testng.TestNG ../testng.xml
 
 14.Next step is to create docker image for maven selenium project
 create DockerFile.txt with following commands -
 
FROM openjdk:11
WORKDIR E:\ReactAppAutomation
COPY target/selenium-docker.jar selenium-docker.jar
COPY target/selenium-docker-tests.jar selenium-docker-tests.jar
COPY target/dependency dependency
COPY testng.xml testng.xml
ENTRYPOINT java -cp selenium-docker.jar:selenium-docker-tests.jar;dependency/* -DBROWSER = $BROWSER -DHUB_HOST=$HUB_HOST org.testng.TestNG ../testng.xml
 
 15. docker build -t docker-selenium-project -f ./DockerFile .
 16. Create output folder in any drive ( Here drive is E )
 Volume Mapping - Get test reports in Output folder (E - Output folder,  /ReactAppAutomation/test-output - project folder)
 docker run -it --entrypoint=/bin/sh --network=host --name docker-selenium -v "E:/ReactAppAutomation/test-output" docker-selenium-project
 17. java -cp selenium-docker.jar:selenium-docker-tests.jar:dependency/* -DBROWSER=chrome org.testng.TestNG testng.xml
 18. docker pull jenkins/jenkins:lts
 docker pull maven:3-alphine
 19. Run Jenkins Container -
 docker run -p 8082:8080 -v "E:/ReactAppAutomation/Jenkins:/var/jenkins_home" jenkins/jenkins:lts

